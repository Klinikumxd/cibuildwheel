name: Test

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:
    # allow manual runs on branches without a PR

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Linters (mypy, flake8, etc.)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - uses: pre-commit/action@v3.0.0
    - name: Check manifest
      run: pipx run nox -s check_manifest
    - name: PyLint checks
      run: |
        echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
        pipx run nox -s pylint

  test:
    name: Test cibuildwheel on ${{ matrix.os }}
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-11]
        python_version: ['3.10']
    timeout-minutes: 180
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      name: Install Python ${{ matrix.python_version }}
      with:
        python-version: ${{ matrix.python_version }}

    # Install podman on this CI instance for podman tests on linux
    # Snippet from: https://github.com/redhat-actions/podman-login/blob/main/.github/workflows/example.yml
    - name: Install latest podman
      if: runner.os == 'Linux'
      run: |
        . /etc/os-release
        echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
        curl -sSfL "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key" | sudo apt-key add -
        sudo apt-get update
        sudo apt-get -y upgrade
        sudo apt-get -y install podman

    - name: Install dependencies
      run: |
        python -m pip install ".[test]"

    - name: Sample build
      if: "contains(github.event.pull_request.labels.*.name, 'CI: Sample build')"
      run: |
        python bin/sample_build.py

    - name: Get some sample wheels
      run: |
        python -m test.test_projects test.test_0_basic.basic_project sample_proj
        cibuildwheel --output-dir wheelhouse sample_proj
      env:
        CIBW_ARCHS_MACOS: x86_64 universal2 arm64

    - uses: actions/upload-artifact@v3
      with:
        name: sample_wheels
        path: wheelhouse

    - name: Test cibuildwheel
      run: |
        python ./bin/run_tests.py --run-podman

  test-emulated:
    name: Test emulated cibuildwheel using qemu
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - name: Install dependencies
      run: |
        python -m pip install ".[test]"

    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Run the emulation tests
      run: |
        pytest --run-emulation test/test_emulation.py
